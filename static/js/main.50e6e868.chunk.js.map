{"version":3,"sources":["components/Display.js","components/DrumPad.js","App.js","reportWebVitals.js","index.js"],"names":["Display","props","id","text","DrumPad","className","onClick","number","src","audio","App","instrumentSounds","keys","useState","sound","setSound","soundsLinks","playAudio","x","Audio","play","useEffect","document","addEventListener","e","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.50e6e868.chunk.js","sourcesContent":["const Display = (props) => {\n    return (\n        <div id=\"display\">\n            {props.text}\n        </div>\n    )\n}\n\nexport default Display\n","const DrumPad = (props) => {\n    return (\n            <button id={props.id} className=\"drum-pad\" onClick={() => {props.onClick(props.number)}}>\n                <audio id={props.text} className=\"clip\" src={props.audio}>\n                </audio>\n                {props.text}\n            </button>\n    )\n}\n\nexport default DrumPad\n","import {useState, useEffect} from 'react'\nimport Display from './components/Display'\nimport DrumPad from './components/DrumPad'\n\n\n\nfunction App() {\n  \n  const instrumentSounds = [\n    \"Heater 1\", \"Heater 2\", \"Heater 3\", \n    \"Heater 4\", \"Clap\", \"Open HH\",\n    \"Kick n'Hat\", \"Kick\", \"Closed HH\"\n  ];\n  const keys = [\"Q\", \"W\", \"E\", \"A\", \"S\", \"D\", \"Z\", \"X\", \"C\"];\n  \n  const [sound, setSound] = useState(\"\");\n  \n  var soundsLinks = [\n    \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\n    \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\n    \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\n    \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\n    \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\n    \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\n    \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\n    \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\n    \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\"\n  ];\n  \n  const playAudio = (x) => {\n    setSound(instrumentSounds[x]);\n    new Audio(soundsLinks[x]).play();\n  };\n\n  \n\n \n\nuseEffect(() => {\n  \n  function keyPlay(e) {\n    if (e.key === 'q'){\n      playAudio(0);\n    }\n    else if (e.key === 'w'){\n      playAudio(1);\n    }  \n    else if (e.key === 'e'){\n      playAudio(2);\n    }  \n    else if (e.key === 'a'){\n      playAudio(3);\n    } \n    else if (e.key === 's'){\n      playAudio(4);\n    } \n    else if (e.key === 'd'){\n      playAudio(5);\n    } \n    else if (e.key === 'z'){\n      playAudio(6);\n    } \n    else if (e.key === 'x'){\n      playAudio(7);\n    } \n    else if (e.key === 'c'){\n      playAudio(8);\n    } \n}\ndocument.addEventListener('keypress', keyPlay);\n}, []);\n\n  return (\n    <div className=\"drum-machine\">\n      <Display text={sound}/>\n      <div id=\"keys-container\">\n        <DrumPad id={instrumentSounds[0]} text={keys[0]} audio={soundsLinks[0]} onClick={playAudio} number={0}/>\n        <DrumPad id={instrumentSounds[1]} text={keys[1]} audio={soundsLinks[1]} onClick={playAudio} number={1}/>\n        <DrumPad id={instrumentSounds[2]} text={keys[2]} audio={soundsLinks[2]} onClick={playAudio} number={2}/>\n        <DrumPad id={instrumentSounds[3]} text={keys[3]} audio={soundsLinks[3]} onClick={playAudio} number={3}/>\n        <DrumPad id={instrumentSounds[4]} text={keys[4]} audio={soundsLinks[4]} onClick={playAudio} number={4}/>\n        <DrumPad id={instrumentSounds[5]} text={keys[5]} audio={soundsLinks[5]} onClick={playAudio} number={5}/>\n        <DrumPad id={instrumentSounds[6]} text={keys[6]} audio={soundsLinks[6]} onClick={playAudio} number={6}/>\n        <DrumPad id={instrumentSounds[7]} text={keys[7]} audio={soundsLinks[7]} onClick={playAudio} number={7}/>\n        <DrumPad id={instrumentSounds[8]} text={keys[8]} audio={soundsLinks[8]} onClick={playAudio} number={8}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}